{"version":3,"sources":["components/blanks/CrossMark.js","components/form/SignInFrom.js","components/form/RegistrationForm.js","components/blanks/CorrectMark.js","components/form/ForgotForm.js","components/form/ResetForm.js","config.js","features/boards/boardsSlice.js","components/blanks/Loader.js","hooks/OutsideClick.js","img/avatar.svg","components/blanks/BurgerButton.js","components/blanks/Header.js","features/lists/listsSlice.js","features/card/cardsSlice.js","app/store.js","components/CreateBoards.js","img/starUnchecked.svg","img/starChecked.svg","components/Boards.js","hooks/heightWindowHook.js","components/board/Menu.js","components/board/BoardName.js","img/description.svg","components/board/Card.js","components/board/CreateCard.js","img/dots.svg","components/board/List.js","components/board/CreateList.js","img/recycling.svg","img/archive.svg","components/board/ChangeCard.js","components/board/ChangeNameCard.js","img/restore.svg","components/board/ArchiveList.js","components/board/ArchiveCard.js","components/board/ShareBoard.js","img/makeLink.svg","components/board/Board.js","components/ValidateInvite.js","components/profile/Profile.js","components/NotFound.js","App.js","index.js"],"names":["CrossMark","dataExists","close","text","className","width","height","viewBox","fill","xmlns","cx","cy","r","strokeWidth","x1","y1","x2","y2","onClick","SignInFrom","socket","useState","email","setEmail","password","setPassword","incorrect","setIncorrect","setDataExists","navigate","useNavigate","validateMail","useEffect","refreshToken","localStorage","getItem","emit","JSON","parse","on","data","userName","accessToken","setItem","stringify","off","style","type","name","placeholder","value","onChange","e","target","onBlur","test","to","preventDefault","length","RegistrationForm","setName","CorrectMark","successfully","d","strokeLinecap","ForgotForm","setSuccessfully","closeWindow","ResetForm","params","useParams","token","axiosInstance","axios","create","baseURL","getBoard","createAsyncThunk","id","a","get","then","response","getBoards","addBoards","nameBoard","config","headers","Accept","method","url","idUser","catch","error","console","log","changeLists","position","boardId","currentListId","changeName","addFavorites","removeFavorites","changeData","date","boardsSlice","createSlice","initialState","boards","status","reducers","removeBoards","state","action","extraReducers","builder","addCase","pending","fulfilled","payload","push","i","_id","favorites","lastVisiting","actions","Loader","OutsideClick","ref","closeModal","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","BurgerButton","Switch","switchState","Header","createShow","userId","profileShow","setProfileShow","resentShow","setResentShow","favoritesShow","setFavoritesShow","menuShow","setMenuShow","visibleProfileMenu","profileRef","useRef","recentRef","favoritesRef","sort","b","map","board","index","src","avatar","sessionStorage","removeItem","getLists","getList","listId","addList","nameList","changeCards","fromListId","toListId","cardId","deleteList","archiveList","unarchiveList","listsSlice","lists","sortingLists","getUsedBoard","orderLists","result","j","removeList","splice","oldList","newList","undefined","archived","getCards","getCard","addCard","nameCard","trim","changeDescription","description","deleteCard","archiveCard","unarchiveCard","cardsSlice","cards","removeCard","descriptionCard","store","configureStore","reducer","boardsReducer","firstUpdate","CreateBoards","changeShow","dispatch","useDispatch","setNameBoard","menuRef","getState","Boards","useSelector","favoritesBoards","setFavorites","recent","setRecent","setCreateShow","heightBody","setHeightBody","newToken","favoriteAction","favorite","heightRef","clientHeight","minHeight","starUnchecked","starChecked","getWindowHeight","window","innerHeight","useWindowHeight","windowHeight","setWindowHeight","currentBoard","BoardName","visibleInput","inputStyle","maxWidth","onKeyDown","key","keyCode","roomId","message","Card","card","visibleChangeCard","visibleChangeNameCard","draggableId","provided","innerRef","draggableProps","dragHandleProps","substring","descriptionImg","CreateCard","formShow","closeForm","setNameCard","createCard","replace","cardInput","focus","cardFormRef","maxRows","List","listName","listCards","setNameList","actionShow","setActionShow","cardCreateShow","setCardCreateShow","actionsFrom","nameInput","sendForm","blur","deletingList","archivingList","spellCheck","dots","droppableId","droppableProps","maxHeight","CreateList","listFormShow","setListFormShow","visibleListCreate","createList","listInput","listFormRef","ChangeCard","changeCard","isOpen","setDescription","visible","setVisible","form","descript","left","display","onFocus","recycling","archive","ChangeNameCard","changeNameCard","xPos","yPos","backgroundColor","transform","ArchiveList","back","list","restore","ArchiveCard","ShareBoard","shareLink","link","setLink","readOnly","boardName","newLink","uniqid","Menu","useMemo","menuOpen","setMenuOpen","archiveListOpen","setArchiveListOpen","archiveCardOpen","setArchiveCardOpen","shareBoard","setShareBoard","menu","owner","Board","setChangeCard","setChangeNameCard","setDescriptionCard","setCardId","setXPos","setYPos","connect","setConnect","innerText","getBoundingClientRect","x","y","Date","now","find","unwrap","unwrapResult","res","originalPromiseResult","rejectedValueOrSerializedError","idUse","drag","setDrag","onDragStart","onDragEnd","destination","source","onDrop","direction","ValidateInvite","location","href","Profile","oldName","NotFound","App","path","element","io","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.207fd89b.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"../../styles/Marks.css\";\n\nexport const CrossMark = ({dataExists, close, text}) => {\n\n    return (\n        <div className={!dataExists ? \"notExist\" : \"exist\"}>\n        <svg\n          className=\"checkmark\"\n          width=\"297\"\n          height=\"297\"\n          viewBox=\"0 0 297 297\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g className=\"Error\">\n            <circle\n              className=\"Ellipse\"\n              cx=\"148.5\"\n              cy=\"148.5\"\n              r=\"143.5\"\n              strokeWidth=\"10\"\n            />\n            <line\n              className=\"Line1\"\n              x1=\"92.506\"\n              y1=\"88.0566\"\n              x2=\"209.506\"\n              y2=\"208.057\"\n              strokeWidth=\"7\"\n            />\n            <line\n              className=\"Line2\"\n              x1=\"209.506\"\n              y1=\"88.4434\"\n              x2=\"92.506\"\n              y2=\"208.443\"\n              strokeWidth=\"7\"\n            />\n          </g>\n        </svg>\n        {text}\n        <br />\n        <button className=\"closePopup\" onClick={close}>\n          Закрыть\n        </button>\n      </div>\n    )\n}","import React, { useState, useEffect } from \"react\";\n\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport { CrossMark } from \"../blanks/CrossMark\";\n\nexport const SignInFrom = ({ socket, height }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [incorrect, setIncorrect] = useState(false);\n  const [dataExists, setDataExists] = useState(false);\n\n  const navigate = useNavigate();\n\n  const validateMail =\n    /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\n  const onEmailChange = (e) => setEmail(e.target.value);\n  const onPasswordChange = (e) => setPassword(e.target.value);\n\n  const validate = (e) => {\n    if (validateMail.test(e.target.value)) {\n      setIncorrect(false);\n    } else {\n      setIncorrect(true);\n    }\n  };\n\n  const closeWindow = (e) => {\n    e.preventDefault();\n    setDataExists(false);\n  };\n\n  useEffect(() => {\n    const refreshToken = localStorage.getItem(\"refreshToken\");\n\n    if (refreshToken) {\n      socket.emit(\"oldUser\", JSON.parse(refreshToken));\n    }\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"oldUser\", (data) => {\n      if (data !== \"Error\") {\n        const { userName, refreshToken, accessToken } = data;\n\n        localStorage.setItem(\"accessToken\", JSON.stringify(accessToken));\n\n        localStorage.setItem(\"refreshToken\", JSON.stringify(refreshToken));\n\n        localStorage.setItem(\"userName\", JSON.stringify(userName));\n\n        socket.off(\"oldUser\");\n\n        navigate(\"/\" + userName + \"/boards\");\n      }\n    });\n\n    socket.on(\"signIn\", (data) => {\n      \n      if (data !== \"Error\") {\n        const { userName, refreshToken, accessToken } = data;\n\n        localStorage.setItem(\"accessToken\", JSON.stringify(accessToken));\n\n        localStorage.setItem(\"refreshToken\", JSON.stringify(refreshToken));\n\n        localStorage.setItem(\"userName\", JSON.stringify(userName));\n\n        socket.off(\"signIn\");\n\n        navigate(\"/\" + userName + \"/boards\");\n      } else {\n        setDataExists(true);\n      }\n    });\n  }, [socket]);\n\n  const sendForm = (e) => {\n    e.preventDefault();\n\n    if (incorrect === false && password.length >= 6) {\n      \n      socket.emit(\"signIn\", email, password);\n    }\n  };\n\n  return (\n    <div className=\"form\">\n      <div className=\"container\">\n        <div className=\"form__inner\" style={{ height: height }}>\n          <form className=\"signFrom\">\n            <div className=\"title\">Авторизация</div>\n            <div className=\"inputs\">\n              <div className=\"incorrectMail\">\n                <span\n                  className={\n                    !incorrect ? \"incorrectMessage\" : \"incorrectMessage active\"\n                  }\n                >\n                  Неверная почта\n                </span>\n              </div>\n              <input\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"Почта\"\n                value={email}\n                onChange={onEmailChange}\n                onBlur={validate}\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Пароль\"\n                value={password}\n                onChange={onPasswordChange}\n              />\n            </div>\n            <div className=\"forgot\">\n              Заблыи: <Link to=\"/forg\"> Пароль? </Link>\n            </div>\n            <div className=\"sendform\">\n              <button onClick={sendForm}>Войти</button>\n            </div>\n            <div className=\"no Account\">\n              Нету аккаунта?\n              <Link to=\"/reg\"> Зарегестрироваться </Link>\n            </div>\n          </form>\n          <CrossMark\n            dataExists={dataExists}\n            close={closeWindow}\n            text={\"Проверьте корректность введеных данных\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport { CrossMark } from \"../blanks/CrossMark\";\n\nexport const RegistrationForm = ({ socket, height }) => {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [incorrect, setIncorrect] = useState(false);\n  const [dataExists, setDataExists] = useState(false);\n\n  const navigate = useNavigate();\n\n  const validateMail =\n    /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\n  const onEmailChange = (e) => setEmail(e.target.value);\n  const onNameChange = (e) => setName(e.target.value);\n  const onPasswordChange = (e) => setPassword(e.target.value);\n\n  const validate = (e) => {\n    if (validateMail.test(e.target.value)) {\n      setIncorrect(false);\n    } else {\n      setIncorrect(true);\n    }\n  };\n\n  const closeWindow = (e) => {\n    e.preventDefault();\n    setDataExists(false);\n  };\n\n  useEffect(() => {\n    const refreshToken = localStorage.getItem(\"refreshToken\");\n\n    if (refreshToken !== \"undefined\" && refreshToken !== null) {\n      socket.emit(\"oldUser\", JSON.parse(refreshToken));\n    }\n  }, []);\n  useEffect(() => {\n    socket.on(\"oldUser\", (data) => {\n      if (data !== \"Error\") {\n        const { userName, refreshToken, accessToken } = data;\n\n        localStorage.setItem(\"accessToken\", JSON.stringify(accessToken));\n\n        localStorage.setItem(\"refreshToken\", JSON.stringify(refreshToken));\n\n        localStorage.setItem(\"userName\", JSON.stringify(userName));\n\n        socket.off(\"oldUser\");\n\n        navigate(\"/\" + userName + \"/boards\");\n      }\n    });\n    socket.on(\"registration\", (data) => {\n      if (data !== \"Exist\") {\n\n        const { userName, refreshToken, accessToken } = data;\n\n\n        localStorage.setItem(\"accessToken\", JSON.stringify(accessToken));\n\n        localStorage.setItem(\"refreshToken\", JSON.stringify(refreshToken));\n\n        localStorage.setItem(\"userName\", JSON.stringify(userName));\n\n        socket.off(\"registration\");\n\n        navigate(\"/\" + userName + \"/boards\");\n      } else if (data === \"Exist\") {\n        setDataExists(true);\n      }\n    });\n  }, [socket]);\n\n  const sendForm = (e) => {\n    e.preventDefault();\n    if (incorrect === false && name.length > 0 && password.length >= 6) {\n      socket.emit(\"registration\", email, name, password);\n    }\n  };\n\n  return (\n    <div className=\"form\">\n      <div className=\"container\">\n      <div className=\"form__inner\" style={{'height': height}}>\n          <form className=\"regForm\">\n            <div className=\"title\">Регистрация</div>\n            <div className=\"inputs\">\n              <div className=\"incorrectMail\">\n                <span\n                  className={\n                    !incorrect ? \"incorrectMessage\" : \"incorrectMessage active\"\n                  }\n                >\n                  Неверная почта\n                </span>\n              </div>\n              <input\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"E-mail\"\n                value={email}\n                onChange={onEmailChange}\n                onBlur={validate}\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Логин\"\n                value={name}\n                onChange={onNameChange}\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Пароль\"\n                value={password}\n                onChange={onPasswordChange}\n              />\n            </div>\n            <div className=\"sendform\">\n              <button onClick={sendForm}>Зарегестрироваться</button>\n            </div>\n            <div className=\"have Account\">\n              Уже есть аккаунт?\n              <Link to=\"/sig\"> Войти </Link>\n            </div>\n          </form>\n          <CrossMark\n            dataExists={dataExists}\n            close={closeWindow}\n            text={\"Проверьте корректность данных\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport \"../../styles/Marks.css\";\n\nexport const CorrectMark = ({successfully, close}) => {\n\n    return (\n        <div className={successfully ? \"successfully\" : \"unsuccessful\"}>\n        <svg\n          className=\"check\"\n          width=\"297\"\n          height=\"297\"\n          viewBox=\"0 0 297 297\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g className=\"done\">\n            <circle\n              className=\"StokeRound\"\n              cx=\"148.5\"\n              cy=\"148.5\"\n              r=\"143.5\"\n              strokeWidth=\"10\"\n            />\n            <path\n              className=\"SmallLine\"\n              d=\"M66 142.565L134.634 200.069\"\n              strokeWidth=\"7\"\n              strokeLinecap=\"round\"\n            />\n            <line\n              className=\"BigLine\"\n              x1=\"231.493\"\n              y1=\"84.9316\"\n              x2=\"135.001\"\n              y2=\"199.576\"\n              strokeWidth=\"7\"\n              strokeLinecap=\"round\"\n            />\n          </g>\n        </svg>\n        На вашу почту отправлена ссылка\n        <br />\n        <button className=\"closePopup\" onClick={close}>\n          Закрыть\n        </button>\n      </div>\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CrossMark } from \"../blanks/CrossMark\";\nimport { CorrectMark } from \"../blanks/CorrectMark\";\n\nexport const ForgotForm = ({ socket, height }) => {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [incorrect, setIncorrect] = useState(false);\n  const [dataExists, setDataExists] = useState(false);\n  const [successfully, setSuccessfully] = useState(false);\n\n  const validateMail =\n    /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\n  const onEmailChange = (e) => setEmail(e.target.value);\n  const onNameChange = (e) => setName(e.target.value);\n\n  const validate = (e) => {\n    if (validateMail.test(e.target.value)) {\n      setIncorrect(false);\n    } else {\n      setIncorrect(true);\n    }\n  };\n\n  const closeWindow = (e) => {\n    e.preventDefault();\n    setDataExists(false);\n    setSuccessfully(false);\n  };\n\n  const sendForm = (e) => {\n    e.preventDefault();\n    if (incorrect === false && email.length > 0) {\n      socket.emit(\"forgot\", email, name);\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"forgot\", (data) => {\n      if (data === \"Success\") {\n        setSuccessfully(true);\n        socket.off(\"forgot\");\n      } else {\n        setDataExists(true);\n      }\n    });\n  }, [socket]);\n\n  return (\n    <div className=\"form\">\n      <div className=\"container\">\n      <div className=\"form__inner\" style={{'height': height}}>\n          <form className=\"forgetForm\">\n            <div className=\"title\">Восстановление доступа</div>\n            <div className=\"inputs\">\n              <div className=\"incorrectMail\">\n                <span\n                  className={\n                    !incorrect ? \"incorrectMessage\" : \"incorrectMessage active\"\n                  }\n                >\n                  Неверная почта\n                </span>\n              </div>\n              <input\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"Почта\"\n                value={email}\n                onChange={onEmailChange}\n                onBlur={validate}\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Логин\"\n                value={name}\n                onChange={onNameChange}\n              />\n            </div>\n            <div className=\"sendform\">\n              <button onClick={sendForm}>Отправить</button>\n            </div>\n            <div className=\"have Account\">\n              Назад к\n              <Link to=\"/sig\"> Входу </Link>\n            </div>\n          </form>\n          <CrossMark\n            dataExists={dataExists}\n            close={closeWindow}\n            text={\"Пользователя с такой почтой не существует\"}\n          />\n          <CorrectMark successfully={successfully} close={closeWindow} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\n\nimport { CrossMark } from \"../blanks/CrossMark\";\n\nexport const ResetForm = ({ socket, height }) => {\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const [password, setPassword] = useState(\"\");\n  const [dataExists, setDataExists] = useState(false);\n\n  const onPasswordChange = (e) => setPassword(e.target.value);\n\n  const closeWindow = (e) => {\n    e.preventDefault();\n    setDataExists(false);\n  };\n\n  useEffect(() => {\n    const token = params.token;\n    socket.emit(\"tokenValidate\", token);\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"tokenValidate\", (data) => {\n      if (data !== \"Valid\") {\n        socket.off(\"tokenValidate\");\n\n        navigate(\"/error/404\");\n      }\n    });\n    socket.on(\"passwordReset\", (data) => {\n      if (data === \"Success\") {\n        socket.off(\"passwordReset\");\n\n        navigate(\"/sig\");\n      } else {\n        setDataExists(true);\n      }\n    });\n  }, [socket]);\n\n  const sendForm = (e) => {\n    e.preventDefault();\n\n    if (password.length > 6) {\n      const token = params.token;\n\n      socket.emit(\"passwordReset\", token, password);\n    }\n  };\n\n  return (\n    <div className=\"form\">\n      <div className=\"container\">\n      <div className=\"form__inner\" style={{'height': height}}>\n          <form className=\"forgetForm\">\n            <div className=\"title\">Сброс пароля</div>\n            <div className=\"inputs\">\n              <input\n                type=\"text\"\n                placeholder=\"Новый пароль\"\n                value={password}\n                onChange={onPasswordChange}\n              />\n            </div>\n            <div className=\"sendform\">\n              <button onClick={sendForm}>Отправить</button>\n            </div>\n            <div className=\"have Account\">\n              Назад к \n              <Link to=\"/sig\"> Авторизации </Link>\n            </div>\n          </form>\n          <CrossMark\n            dataExists={dataExists}\n            close={closeWindow}\n            text={\"Пожалуйста используйте пароль отличный от предыдущего\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import axios from \"axios\";\n\nexport const axiosInstance = axios.create({\n  baseURL: \"\",\n});\n\nexport const startUrl = \"\";","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nimport { axiosInstance } from \"../../config\";\n\nconst initialState = {\n  boards: [],\n  status: \"idle\",\n};\n\nexport const getBoard = createAsyncThunk(\"boards/getBoard\", async (id) => {\n  const response = await axiosInstance\n    .get(\"/boards/\" + id + \"/one\")\n    .then((response) => {\n      return response.data;\n    });\n  return response;\n});\n\nexport const getBoards = createAsyncThunk(\"boards/getBoards\", async (id) => {\n  \n  const response = await axiosInstance\n    .get(\"/boards/\" + id + \"/all\")\n    .then((response) => {\n      return response.data;\n    });\n  return response;\n});\n\nexport const addBoards = createAsyncThunk(\n  \"boards/addBoard\",\n  async ({ id, nameBoard }) => {\n    const response = await axiosInstance({\n      config: {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      },\n      method: \"POST\",\n      url: \"/boards/create\",\n      data: {\n        nameBoard,\n        idUser: id,\n      },\n    })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return response;\n  }\n);\n//  change name\nexport const changeLists = createAsyncThunk(\n  \"boards/changeListsPosition\",\n  async ({ position, boardId, currentListId }) => {\n    const response = await axiosInstance({\n      config: {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      },\n      method: \"POST\",\n      url: \"/board/list/move\",\n      data: {\n        position,\n        boardId,\n        currentListId,\n      },\n    })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return response;\n  }\n);\n\nexport const changeName = createAsyncThunk(\n  \"boards/changeName\",\n  async ({ nameBoard, boardId }) => {\n    const response = await axiosInstance({\n      config: {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      },\n      method: \"POST\",\n      url: \"/board/nameChange\",\n      data: {\n        nameBoard,\n        boardId,\n      },\n    })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return response;\n  }\n);\n\nexport const addFavorites = createAsyncThunk(\n  \"boards/addFavorites\",\n  async ({ boardId }) => {\n    const response = await axiosInstance({\n      config: {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      },\n      method: \"POST\",\n      url: \"/board/addFavorites\",\n      data: {\n        boardId,\n      },\n    })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return response;\n  }\n);\n\nexport const removeFavorites = createAsyncThunk(\n  \"boards/removeFavorites\",\n  async ({ boardId }) => {\n    const response = await axiosInstance({\n      config: {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      },\n      method: \"POST\",\n      url: \"/board/removeFavorites\",\n      data: {\n        boardId,\n      },\n    })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return response;\n  }\n);\n\nexport const changeData = createAsyncThunk(\n  \"boards/changeData\",\n  async ({ boardId, date }) => {\n    const response = await axiosInstance({\n      config: {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      },\n      method: \"POST\",\n      url: \"/board/changeData\",\n      data: {\n        boardId,\n        date,\n      },\n    })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return response;\n  }\n);\n\nconst boardsSlice = createSlice({\n  name: \"boards\",\n  initialState,\n  reducers: {\n    removeBoards(state, action) {\n      state.boards = [];\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(getBoard.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(getBoard.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n\n        // action has an initial state as an object\n        // but not as an object in array\n        state.boards = [action.payload];\n      })\n      .addCase(getBoards.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(getBoards.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.boards = action.payload;\n      })\n      .addCase(addBoards.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(addBoards.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.boards.push(action.payload);\n      })\n      .addCase(changeLists.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(changeLists.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.boards = [action.payload];\n      })\n      .addCase(changeName.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(changeName.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n\n        const { nameBoard, boardId } = action.payload;\n\n        for (let i = 0; i < state.boards.length; i++) {\n          if (state.boards[i]._id === boardId) {\n            state.boards[i].nameBoard = nameBoard;\n          }\n        }\n      })\n      .addCase(addFavorites.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(addFavorites.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n\n        const { boardId } = action.payload;\n\n        for (let i = 0; i < state.boards.length; i++) {\n          if (state.boards[i]._id === boardId) {\n            state.boards[i].favorites = true;\n          }\n        }\n      })\n      .addCase(removeFavorites.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(removeFavorites.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n\n        const { boardId } = action.payload;\n\n        for (let i = 0; i < state.boards.length; i++) {\n          if (state.boards[i]._id === boardId) {\n            state.boards[i].favorites = false;\n          }\n        }\n      })\n      .addCase(changeData.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(changeData.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n\n        const { boardId, date } = action.payload;\n\n        for (let i = 0; i < state.boards.length; i++) {\n          if (state.boards[i]._id === boardId) {\n            state.boards[i].lastVisiting = date;\n          }\n        }\n      });\n  },\n});\n\nexport const { removeBoards } = boardsSlice.actions;\n\nexport default boardsSlice.reducer;\n","import React from \"react\";\n\nimport \"../../styles/Loader.css\";\n\nexport const Loader = () => {\n  return (\n    <div className=\"loadScreen\">\n      <div className=\"lds-facebook\">\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n","import { useEffect } from \"react\";\n\nexport default function OutsideClick(ref, closeModal) {\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (\n        ref.current &&\n        !ref.current.contains(event.target) &&\n        ref.current.className !== \"hidden\"\n      ) {\n        closeModal();\n      }\n    }\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref]);\n}\n","export default __webpack_public_path__ + \"static/media/avatar.ccd1e841.svg\";","import React from \"react\";\n\nimport \"../../styles/BurgerButton.css\";\n\nexport const BurgerButton = ({ Switch, switchState }) => {\n  return (\n    <div\n      className={switchState === false ? \"BurgerButton\" : \"BurgerButton opened\"}\n      onClick={Switch}\n    >\n      <svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\">\n        <path\n          className=\"line line1\"\n          d=\"M 20,29.000046 H 80.000231 C 80.000231,29.000046 94.498839,28.817352 94.532987,66.711331 94.543142,77.980673 90.966081,81.670246 85.259173,81.668997 79.552261,81.667751 75.000211,74.999942 75.000211,74.999942 L 25.000021,25.000058\"\n        />\n        <path className=\"line line2\" d=\"M 20,50 H 80\" />\n        <path\n          className=\"line line3\"\n          d=\"M 20,70.999954 H 80.000231 C 80.000231,70.999954 94.498839,71.182648 94.532987,33.288669 94.543142,22.019327 90.966081,18.329754 85.259173,18.331003 79.552261,18.332249 75.000211,25.000058 75.000211,25.000058 L 25.000021,74.999942\"\n        />\n      </svg>\n    </div>\n  );\n};\n","import React, { useState, useRef } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\n\nimport OutsideClick from \"../../hooks/OutsideClick\";\n\nimport avatar from \"../../img/avatar.svg\";\n\nimport \"../../styles/Header.css\";\nimport { BurgerButton } from \"./BurgerButton\";\n\nexport const Header = ({ boards, createShow }) => {\n  const navigate = useNavigate();\n\n  const userId = localStorage.getItem(\"userId\");\n  const userName = localStorage.getItem(\"userName\");\n\n  const [profileShow, setProfileShow] = useState(false);\n  const [resentShow, setResentShow] = useState(false);\n  const [favoritesShow, setFavoritesShow] = useState(false);\n\n  const [menuShow, setMenuShow] = useState(false);\n\n  const visibleProfileMenu = () => setProfileShow(true);\n\n  const logOut = () => {\n    sessionStorage.removeItem(\"accessToken\");\n\n    localStorage.removeItem(\"refreshToken\");\n\n    navigate(\"/sig\");\n  };\n\n  const profileRef = useRef(null);\n  const recentRef = useRef(null);\n  const favoritesRef = useRef(null);\n\n  OutsideClick(profileRef, () => setProfileShow(false));\n  OutsideClick(recentRef, () => setResentShow(false));\n  OutsideClick(favoritesRef, () => setFavoritesShow(false));\n  return (\n    <header className=\"header header-board\">\n      <div className=\"container\">\n        <div className=\"header__inner\">\n          <div className=\"logo\">\n            <Link to={\"/\" + userId + \"/boards\"}>MyTrello</Link>\n          </div>\n\n          <BurgerButton Switch={() => setMenuShow(!menuShow)} switchState={menuShow} />\n          <div className={menuShow == false ? \"burgerMenu\" : \"burgerMenu open\"}>\n            <div\n              className=\"recent\"\n              ref={recentRef}\n              onClick={() => setResentShow(!resentShow)}\n            >\n              Недавние\n              <ul className={resentShow === true ? null : \"hidden\"}>\n                <li>\n                Недавние\n                  <hr />\n                </li>\n\n                {[...boards]\n                  .sort((a, b) => {\n                    if (a.lastVisiting > b.lastVisiting) {\n                      return -1;\n                    } else {\n                      return 1;\n                    }\n                  })\n                  .map((board, index) => {\n                    if (index < 3) {\n                      return (\n                        <li key={board.nameBoard}>\n                          <Link\n                            to={\"/board/\" + board._id + \"/\" + board.nameBoard}\n                            key={board._id}\n                          >\n                            {board.nameBoard}\n                          </Link>\n                        </li>\n                      );\n                    }\n                  })}\n              </ul>\n            </div>\n            <div\n              className=\"favorites\"\n              ref={favoritesRef}\n              onClick={() => setFavoritesShow(!favoritesShow)}\n            >\n              Избранные\n              <ul className={favoritesShow === true ? null : \"hidden\"}>\n                <li>\n                Избранные\n                  <hr />\n                </li>\n                {boards.map((board) => {\n                  if (board.favorites === true) {\n                    return (\n                      <li key={board.nameBoard}>\n                        <Link\n                          to={\"/board/\" + board._id + \"/\" + board.nameBoard}\n                          key={board._id}\n                        >\n                          {board.nameBoard}\n                        </Link>\n                      </li>\n                    );\n                  }\n                })}\n              </ul>\n            </div>\n            <div onClick={createShow}>Создать таблицу</div>\n          </div>\n          <div className=\"account\" ref={profileRef}>\n            <div className=\"account-avatar\" onClick={visibleProfileMenu}>\n              <img src={avatar} />\n            </div>\n            <div className={profileShow === false ? \"hidden\" : \"account__menu\"}>\n              <div className=\"account__menu-title\">аккаунт</div>\n              <ul>\n                <li>\n                  <Link to={\"/\" + userName + \"/profile\"}>Профиль</Link>\n                </li>\n                <li onClick={logOut}>Выйти</li>\n              </ul>\n              <button onClick={visibleProfileMenu}>X</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nimport {axiosInstance} from \"../../config\";\n\nconst initialState = {\n  lists: [],\n  status: \"idle\",\n};\n\nexport const getLists = createAsyncThunk(\"lists/getLists\", async (boardId) => {\n  const response = await axiosInstance({\n    config: {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    },\n    method: \"POST\",\n    url: \"/board/lists/get\",\n    data: {\n      boardId,\n    },\n  })\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  return response;\n});\n\nexport const getList = createAsyncThunk(\"lists/getList\", async (listId) => {\n  const response = await axiosInstance({\n    config: {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    },\n    method: \"POST\",\n    url: \"/board/lists/getOne\",\n    data: {\n      listId,\n    },\n  })\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  return response;\n});\n\nexport const addList = createAsyncThunk(\n  \"lists/addList\",\n  async ({ nameList, boardId }) => {\n    const response = await axiosInstance({\n      config: {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      },\n      method: \"POST\",\n      url: \"/board/list/create\",\n      data: {\n        nameList,\n        boardId,\n      },\n    })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return response;\n  }\n);\n\n// change the name\nexport const changeCards = createAsyncThunk(\n  \"lists/changeCardsPosition\",\n  async ({ fromListId, toListId, position, cardId }) => {\n    const response = await axiosInstance({\n      config: {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      },\n      method: \"POST\",\n      url: \"/board/list/card/move\",\n      data: {\n        fromListId,\n        toListId,\n        position,\n        cardId,\n      },\n    })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return response;\n  }\n);\n\nexport const changeName = createAsyncThunk(\n  \"lists/changeName\",\n  async ({ listId, nameList }) => {\n    const response = await axiosInstance({\n      config: {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      },\n      method: \"POST\",\n      url: \"/board/list/changeName\",\n      data: {\n        listId,\n        nameList,\n      },\n    })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return response;\n  }\n);\n\nexport const deleteList = createAsyncThunk(\n  \"lists/delete\",\n  async ({ listId }) => {\n    const response = await axiosInstance({\n      config: {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      },\n      method: \"POST\",\n      url: \"/board/list/delete\",\n      data: {\n        listId,\n      },\n    })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return response;\n  }\n);\n\nexport const archiveList = createAsyncThunk(\n  \"lists/archive\",\n  async ({ listId }) => {\n    const response = await axiosInstance({\n      config: {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      },\n      method: \"POST\",\n      url: \"/board/list/archive\",\n      data: {\n        listId,\n      },\n    })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return response;\n  }\n);\n\nexport const unarchiveList = createAsyncThunk(\n  \"lists/unarchive\",\n  async ({ listId }) => {\n    const response = await axiosInstance({\n      config: {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      },\n      method: \"POST\",\n      url: \"/board/list/unarchive\",\n      data: {\n        listId,\n      },\n    })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return response;\n  }\n);\n\nconst listsSlice = createSlice({\n  name: \"lists\",\n  initialState,\n  reducers: {\n    sortingLists(state, action) {\n      if (state.lists[0]?.boardId) {\n        function getUsedBoard() {\n          for (let i = 0; i < action.payload.length; i++) {\n            if (action.payload[i]._id === state.lists[0].boardId) {\n              return action.payload[i].lists;\n            }\n          }\n        }\n\n        const orderLists = getUsedBoard();\n        \n        let result = [];\n\n        for (let i = 0; i < orderLists.length; i++) {\n          for (let j = 0; j < state.lists.length; j++) {\n            if (orderLists[i] === state.lists[j]._id) {\n              result.push(state.lists[j]);\n            }\n          }\n        }\n\n        state.lists = result;\n      }\n    },\n    removeList(state, action) {\n      const listId = action.payload;\n\n      for (let i = 0; i < state.lists.length; i++) {\n        if (state.lists[i]._id === listId) {\n          state.lists.splice(i, 1);\n        }\n      }\n    }\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(getLists.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(getLists.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n\n        state.lists = action.payload;\n      })\n      .addCase(getList.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(getList.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n\n        const listId = action.payload._id;\n\n        for (let i = 0; i < state.lists.length; i++) {\n          if (state.lists[i]._id === listId) {\n            state.lists.splice(i, 1, action.payload);\n          }\n        }\n      })\n      .addCase(addList.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(addList.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.lists.push(action.payload);\n      })\n      .addCase(changeCards.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(changeCards.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n\n        const { oldList, newList } = action.payload;\n\n        if (newList === undefined) {\n          for (let i = 0; i < state.lists.length; i++) {\n            if (state.lists[i]._id === oldList._id) {\n              state.lists[i] = oldList;\n            }\n          }\n        } else {\n          for (let i = 0; i < state.lists.length; i++) {\n            if (state.lists[i]._id === oldList._id) {\n              state.lists[i] = oldList;\n            }\n            if (state.lists[i]._id === newList._id) {\n              state.lists[i] = newList;\n            }\n          }\n        }\n      })\n      .addCase(changeName.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(changeName.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n\n        const { listId, nameList } = action.payload;\n\n        for (let i = 0; i < state.lists.length; i++) {\n          if (state.lists[i]._id === listId) {\n            state.lists[i].nameList = nameList;\n          }\n        }\n      })\n      .addCase(deleteList.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(deleteList.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n\n        const { listId } = action.payload;\n\n        for (let i = 0; i < state.lists.length; i++) {\n          if (state.lists[i]._id === listId) {\n            state.lists.splice(i, 1);\n          }\n        }\n      })\n      .addCase(archiveList.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(archiveList.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n\n        const { listId } = action.payload;\n\n        for (let i = 0; i < state.lists.length; i++) {\n          if (state.lists[i]._id === listId) {\n            state.lists[i].archived = true;\n          }\n        }\n      })\n      .addCase(unarchiveList.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(unarchiveList.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n\n        const { listId } = action.payload;\n\n        for (let i = 0; i < state.lists.length; i++) {\n          if (state.lists[i]._id === listId) {\n            state.lists[i].archived = false;\n          }\n        }\n      });\n  },\n});\n\nexport const { sortingLists, removeList } = listsSlice.actions;\n\nexport default listsSlice.reducer;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nimport {axiosInstance} from \"../../config\";\n\nconst initialState = {\n  cards: [],\n  status: \"idle\",\n};\n\nexport const getCards = createAsyncThunk(\"cards/getCards\", async (boardId) => {\n  const response = await axiosInstance({\n    config: {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    },\n    method: \"POST\",\n    url: \"/board/list/card/get\",\n    data: {\n      boardId,\n    },\n  })\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  return response;\n});\n\nexport const getCard = createAsyncThunk(\"cards/getCard\", async (cardId) => {\n  const response = await axiosInstance({\n    config: {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    },\n    method: \"POST\",\n    url: \"/board/list/card/getOne\",\n    data: {\n      cardId,\n    },\n  })\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  return response;\n});\n\nexport const addCard = createAsyncThunk(\n  \"cards/addCard\",\n  async ({ nameCard, boardId, listId }) => {\n    const response = await axiosInstance({\n      config: {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      },\n      method: \"POST\",\n      url: \"/board/list/card/create\",\n      data: {\n        nameCard: nameCard.trim(),\n        boardId,\n        listId,\n      },\n    })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return response;\n  }\n);\n\nexport const changeName = createAsyncThunk(\n  \"cards/changeName\",\n  async ({ cardId, nameCard }) => {\n    const response = await axiosInstance({\n      config: {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      },\n      method: \"POST\",\n      url: \"/board/list/card/changeName\",\n      data: {\n        cardId,\n        nameCard,\n      },\n    })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return response;\n  }\n);\n\nexport const changeDescription = createAsyncThunk(\n  \"cards/changeDescription\",\n  async ({ cardId, description }) => {\n    const response = await axiosInstance({\n      config: {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      },\n      method: \"POST\",\n      url: \"/board/list/card/changeDescription\",\n      data: {\n        cardId,\n        description,\n      },\n    })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return response;\n  }\n);\n\nexport const deleteCard = createAsyncThunk(\n  \"cards/delete\",\n  async ({ cardId }) => {\n    const response = await axiosInstance({\n      config: {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      },\n      method: \"POST\",\n      url: \"/board/list/card/deleteCard\",\n      data: {\n        cardId,\n      },\n    })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return response;\n  }\n);\n\nexport const archiveCard = createAsyncThunk(\n  \"cards/archive\",\n  async ({ cardId }) => {\n    const response = await axiosInstance({\n      config: {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      },\n      method: \"POST\",\n      url: \"/board/list/card/archive\",\n      data: {\n        cardId,\n      },\n    })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return response;\n  }\n);\n\nexport const unarchiveCard = createAsyncThunk(\n  \"cards/unarchive\",\n  async ({ cardId }) => {\n    const response = await axiosInstance({\n      config: {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      },\n      method: \"POST\",\n      url: \"/board/list/card/unarchive\",\n      data: {\n        cardId,\n      },\n    })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return response;\n  }\n);\n\nconst cardsSlice = createSlice({\n  name: \"cards\",\n  initialState,\n  reducers: {\n    removeCard(state, action) {\n      const { cardId } = action.payload;\n\n      for (let i = 0; i < state.cards.length; i++) {\n        if (state.cards[i]._id === cardId) {\n          state.cards.splice(i, 1);\n        }\n      }\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(getCards.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(getCards.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.cards = action.payload;\n      })\n      .addCase(getCard.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(getCard.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n\n        const cardId = action.payload._id;\n\n        for (let i = 0; i < state.cards.length; i++) {\n          if (state.cards[i]._id === cardId) {\n            state.cards.splice(i, 1, action.payload);\n          }\n        }\n      })\n      .addCase(addCard.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(addCard.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.cards.push(action.payload);\n      })\n      .addCase(changeName.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(changeName.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n\n        const { cardId, nameCard } = action.payload;\n\n        for (let i = 0; i < state.cards.length; i++) {\n          if (state.cards[i]._id === cardId) {\n            state.cards[i].nameCard = nameCard;\n          }\n        }\n      })\n      .addCase(changeDescription.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(changeDescription.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n\n        const { cardId, description } = action.payload;\n\n        for (let i = 0; i < state.cards.length; i++) {\n          if (state.cards[i]._id === cardId) {\n            state.cards[i].descriptionCard = description.trim();\n          }\n        }\n      })\n      .addCase(deleteCard.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(deleteCard.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n\n        const { cardId } = action.payload;\n\n        for (let i = 0; i < state.cards.length; i++) {\n          if (state.cards[i]._id === cardId) {\n            state.cards.splice(i, 1);\n          }\n        }\n      })\n      .addCase(archiveCard.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(archiveCard.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n\n        const { cardId } = action.payload;\n\n        for (let i = 0; i < state.cards.length; i++) {\n          if (state.cards[i]._id === cardId) {\n            state.cards[i].archived = true;\n          }\n        }\n      })\n      .addCase(unarchiveCard.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(unarchiveCard.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n\n        const { cardId } = action.payload;\n\n        for (let i = 0; i < state.cards.length; i++) {\n          if (state.cards[i]._id === cardId) {\n            state.cards[i].archived = false;\n          }\n        }\n      });\n  },\n});\n\nexport const { removeCard } = cardsSlice.actions;\n\nexport default cardsSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport boardsReducer from \"../features/boards/boardsSlice\";\nimport listsSlice from '../features/lists/listsSlice';\nimport cardsSlice from \"../features/card/cardsSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    boards: boardsReducer,\n    lists: listsSlice,\n    cards: cardsSlice,\n  },\n});\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addBoards } from \"../features/boards/boardsSlice\";\n\nimport \"../styles/CreateBoard.css\";\n\nimport OutsideClick from \"../hooks/OutsideClick\";\nimport { store } from \"../app/store\";\n\nlet firstUpdate = null;\n\nexport const CreateBoards = ({ createShow, changeShow, height, boards }) => {\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  const [nameBoard, setNameBoard] = useState(\"\");\n\n  const menuRef = useRef(null);\n\n  const onNameBoardChange = (e) => setNameBoard(e.target.value);\n\n  const createBoard = () => {\n    const id = localStorage.getItem(\"userId\");\n\n    if (nameBoard.trim().length < 1) return;\n\n    dispatch(addBoards({ id, nameBoard })).then(() => {\n      setNameBoard(\"\");\n\n      boards = store.getState().boards.boards;\n      const { _id, nameBoard } = boards[boards.length - 1];\n\n      changeShow();\n\n      navigate(\"/board/\" + _id + \"/\" + nameBoard);\n    });\n  };\n\n  useEffect(() => {\n    if (!firstUpdate) {\n      firstUpdate = boards.length;\n      return;\n    } else if (boards.length > firstUpdate) {\n      // console.log(boards[boards.length - 1]._id)\n      // firstUpdate = null;\n      // const boardId = boards[boards.length - 1]._id;\n      // const boardName = boards[boards.length - 1].nameBoard;\n      // navigate(\"/board/\" + boardId + \"/\" + boardName);\n    }\n  }, [boards.length]);\n\n  OutsideClick(menuRef, () => changeShow());\n  return (\n    <div\n      className={createShow === false ? \"hidden\" : \"menuCreateBoard\"}\n      style={{ height: height }}\n    >\n      <div className=\"blackBG\">\n        <div className=\"menuCreateBoard__inner\" ref={menuRef}>\n          <div className=\"settingsBoard\">\n            <input\n              type=\"text\"\n              placeholder=\"Название таблицы\"\n              value={nameBoard}\n              onChange={onNameBoardChange}\n            />\n          </div>\n\n          <button\n            onClick={createBoard}\n            className={nameBoard.length > 0 ? \"activeCreate\" : \"\"}\n          >\n            Создать\n          </button>\n          <button onClick={changeShow}>X</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/starUnchecked.846d17a4.svg\";","export default __webpack_public_path__ + \"static/media/starChecked.b7d83052.svg\";","import React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getBoards,\n  addFavorites,\n  removeFavorites,\n} from \"../features/boards/boardsSlice\";\n\nimport { Loader } from \"./blanks/Loader\";\nimport { Header } from \"./blanks/Header.js\";\nimport { CreateBoards } from \"./CreateBoards\";\n\nimport starUnchecked from \"../img/starUnchecked.svg\";\nimport starChecked from \"../img/starChecked.svg\";\nimport { store } from \"../app/store\";\n\nexport const Boards = ({ socket, height }) => {\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n  const { boards, status } = useSelector((state) => state.boards);\n\n  const [favoritesBoards, setFavorites] = useState(0);\n  const [recent, setRecent] = useState(false);\n\n  const [createShow, setCreateShow] = useState(false);\n  const [heightBody, setHeightBody] = useState(null);\n\n  useEffect(() => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n\n    if (!accessToken) navigate(\"/\");\n\n    try {\n      socket.emit(\"tokenVerify\", JSON.parse(accessToken));\n    } catch (error) {\n      socket.emit(\"tokenVerify\", accessToken);\n    }\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"tokenVerify\", (data) => {\n      if (data !== \"Error\") {\n        const { newToken, idUser, userName } = data;\n\n        if (newToken) localStorage.setItem(\"accessToken\", newToken);\n\n        localStorage.setItem(\"userId\", idUser);\n        localStorage.setItem(\"userName\", userName);\n\n        if (store.getState().boards.boards.length === 0) {\n          dispatch(getBoards(idUser));\n        }\n        \n        socket.off(\"tokenVerify\");\n      } else {\n        navigate(\"/error/404\");\n      }\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    if (boards.length > 0) {\n      for (let i = 0; i < boards.length; i++) {\n        if (boards[i].favorites === true) {\n          setFavorites(+1);\n        }\n      }\n\n      for (let i = 0; i < boards.length; i++) {\n        if (boards[i].lastVisiting) {\n          setRecent(+1);\n        }\n      }\n    }\n  }, [boards]);\n\n  const favoriteAction = (favorite, boardId) => {\n    switch (favorite) {\n      case false:\n        dispatch(addFavorites({ boardId }));\n\n        break;\n      case true:\n        dispatch(removeFavorites({ boardId }));\n        setFavorites(favoritesBoards - 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const heightRef = useRef(null);\n\n  useEffect(() => {\n    setHeightBody(heightRef?.current?.clientHeight);\n  });\n\n  return (\n    <div className=\"boardsMenu\" style={{ minHeight: height }} ref={heightRef}>\n      <Header boards={boards} createShow={() => setCreateShow(true)} />\n      <div className=\"workspace\">\n        <div className=\"container\">\n          <div className=\"workspace__inner\">\n            <div className=\"boards\">\n              <ul className={recent > 0 ? null : \"hidden\"}>\n                <li> Недавние </li>\n                {[...boards]\n                  .sort((a, b) => {\n                    if (a.lastVisiting > b.lastVisiting) {\n                      return -1;\n                    } else {\n                      return 1;\n                    }\n                  })\n                  .map((board, index) => {\n                    if (index < 3) {\n                      return (\n                        <li className=\"board\" key={board.nameBoard}>\n                          <Link\n                            to={\"/board/\" + board._id + \"/\" + board.nameBoard}\n                            key={board._id}\n                          >\n                            {board.nameBoard}\n                          </Link>\n                          <img\n                            src={\n                              board.favorites === false\n                                ? starUnchecked\n                                : starChecked\n                            }\n                            onClick={() =>\n                              favoriteAction(board.favorites, board._id)\n                            }\n                          />\n                        </li>\n                      );\n                    }\n                  })}\n              </ul>\n\n              <ul className={favoritesBoards > 0 ? null : \"hidden\"}>\n                <li> Избранные </li>\n                {boards.map((board) => {\n                  if (board.favorites === true) {\n                    return (\n                      <li className=\"board\" key={board.nameBoard}>\n                        <Link\n                          to={\"/board/\" + board._id + \"/\" + board.nameBoard}\n                          key={board._id}\n                        >\n                          {board.nameBoard}\n                        </Link>\n                        <img\n                          src={\n                            board.favorites === false\n                              ? starUnchecked\n                              : starChecked\n                          }\n                          onClick={() =>\n                            favoriteAction(board.favorites, board._id)\n                          }\n                        />\n                      </li>\n                    );\n                  }\n                })}\n              </ul>\n              <ul>\n                <li>Все таблицы</li>\n                {boards.map((board) => {\n                  return (\n                    <li className=\"board\" key={board.nameBoard}>\n                      <Link\n                        to={\"/board/\" + board._id + \"/\" + board.nameBoard}\n                        key={board._id}\n                      >\n                        {board.nameBoard}\n                      </Link>\n                      <img\n                        src={\n                          board.favorites === false\n                            ? starUnchecked\n                            : starChecked\n                        }\n                        onClick={() =>\n                          favoriteAction(board.favorites, board._id)\n                        }\n                      />\n                    </li>\n                  );\n                })}\n                <li className=\"createBoards\">\n                  <button onClick={() => setCreateShow(true)}>\n                    Создать новую таблицу\n                  </button>\n                </li>\n              </ul>\n            </div>\n            <CreateBoards\n              createShow={createShow}\n              changeShow={() => setCreateShow(false)}\n              height={heightBody}\n              boards={boards}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nfunction getWindowHeight() {\n  const { innerHeight: height } = window;\n  return { height };\n}\n\nexport default function useWindowHeight() {\n  const [windowHeight, setWindowHeight] = useState(getWindowHeight());\n\n  useEffect(() => {\n    const handleResize = () => setWindowHeight(getWindowHeight());\n\n    window.addEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowHeight;\n}\n","import React, { useState, useRef, useMemo } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { ArchiveList } from \"./ArchiveList\";\nimport { ArchiveCard } from \"./ArchiveCard\";\nimport { ShareBoard } from \"./ShareBoard\";\n\nimport OutsideClick from \"../../hooks/OutsideClick\";\n\nimport archive from \"../../img/archive.svg\";\nimport link from \"../../img/makeLink.svg\";\n\nimport \"../../styles/Board/Menu.css\";\n\nlet currentBoard;\n\nexport const Menu = ({ height, boards, lists, cards, socket, shareLink }) => {\n  const params = useParams();\n\n  const userId = localStorage.getItem(\"userId\");\n\n  useMemo(() => {\n    for (let i = 0; i < boards.length; i++) {\n      if (boards[i]._id === params.boardId) {\n        currentBoard = boards[i];\n      }\n    }\n  }, [boards]);\n\n\n\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [archiveListOpen, setArchiveListOpen] = useState(false);\n  const [archiveCardOpen, setArchiveCardOpen] = useState(false);\n  const [shareBoard, setShareBoard] = useState(false);\n\n  const menu = useRef(null);\n  OutsideClick(menu, () => setMenuOpen(false));\n  return (\n    <div>\n      <button className=\"menu-button\" onClick={() => setMenuOpen(true)}>\n        Меню\n      </button>\n      <div\n        className={menuOpen === false ? \"hidden\" : \"menu\"}\n        ref={menu}\n        style={{ height: height }}\n      >\n        <div>\n          <div className=\"menuTitle\">\n            Меню\n            <button onClick={() => setMenuOpen(false)}>X</button>\n          </div>\n          <hr />\n          <div onClick={() => setArchiveListOpen(true)}>\n            Листы в архиве <img src={archive} />\n          </div>\n          <div onClick={() => setArchiveCardOpen(true)}>\n            Пункты в архиве <img src={archive} />\n          </div>\n          {currentBoard.owner === userId ? (\n            <div onClick={() => setShareBoard(true)}>\n              Поделиться таблицей <img src={link} />\n            </div>\n          ) : null}\n        </div>\n        {archiveListOpen === true ? (\n          <ArchiveList\n            height={height}\n            back={() => setArchiveListOpen(false)}\n            close={() => setMenuOpen(false)}\n            lists={lists}\n            socket={socket}\n          />\n        ) : null}\n        {archiveCardOpen === true ? (\n          <ArchiveCard\n            height={height}\n            back={() => setArchiveCardOpen(false)}\n            close={() => setMenuOpen(false)}\n            cards={cards}\n            socket={socket}\n          />\n        ) : null}\n        {shareBoard === true ? (\n          <ShareBoard\n            height={height}\n            back={() => setShareBoard(false)}\n            close={() => setMenuOpen(false)}\n            socket={socket}\n            shareLink={shareLink}\n          />\n        ) : null}\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { useDispatch } from \"react-redux\";\nimport { changeName } from \"../../features/boards/boardsSlice\";\n\nimport AutosizeInput from \"react-input-autosize\";\n\nimport \"../../styles/Board/BoardName.css\";\n\nexport const BoardName = ({ name, socket }) => {\n  const params = useParams();\n  const dispatch = useDispatch();\n\n  const [nameBoard, setNameBoard] = useState(\"\");\n  const [visibleInput, setVisibleInput] = useState(false);\n  const [width, setWidth] = useState(null);\n\n  const onNameBoardChange = (e) => {\n    setNameBoard(e.target.value);\n  };\n\n  const sendForm = (e) => {\n    if (e.key === \"Enter\" || e.keyCode === 13) {\n      const { boardId } = params;\n      dispatch(changeName({ nameBoard, boardId })).then(() => {\n        socket.emit(\"bond\", { roomId: boardId, message: \"board changed\" });\n      });\n    }\n  };\n\n  useEffect(() => {\n    setNameBoard(name);\n  }, [name]);\n\n  return (\n    <div className=\"changeBoardName\">\n      <div\n        className={visibleInput ? \"hidden\" : \"boardName\"}\n        style={{ width: width }}\n      >\n        <AutosizeInput\n          value={nameBoard}\n          inputStyle={{maxWidth:604}}\n          onChange={onNameBoardChange}\n          onKeyDown={sendForm}\n        />\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/description.4653bd1d.svg\";","import React, { useState } from \"react\";\n\nimport { Draggable } from \"react-beautiful-dnd\";\n\nimport descriptionImg from \"../../img/description.svg\";\n\nimport \"../../styles/Board/Card.css\";\n\nexport const Card = ({\n  card,\n  index,\n  visibleChangeCard,\n  visibleChangeNameCard,\n}) => {\n  \n  const [name, setNameCard] = useState(card.nameCard)\n  return (\n    <Draggable\n      key={card._id}\n      draggableId={card._id}\n      index={index}\n      id={card._id}\n    >\n      {(provided) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <div className=\"cards\" style={card.descriptionCard.length !== 0 ? null : null}>\n            <div\n              className=\"card\"\n              key={card._id}\n              onClick={(e) =>\n                visibleChangeCard(e, card._id, card.descriptionCard, card.nameCard)\n              }\n            >\n              {card.nameCard.length > 52 ? name.substring(0, 45) + \"...\" : card.nameCard}\n              {card.descriptionCard.length !== 0 ? (\n                <div>\n                  <img src={descriptionImg} />\n                </div>\n              ) : null}\n            </div>\n            <span\n              onClick={(e) => visibleChangeNameCard(e, card.nameCard, card._id)}\n            ></span>\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { useDispatch } from \"react-redux\";\nimport { getLists, sortingLists } from \"../../features/lists/listsSlice\";\nimport { addCard } from \"../../features/card/cardsSlice\";\n\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nimport OutsideClick from \"../../hooks/OutsideClick\";\n\nimport \"../../styles/Board/CreateCard.css\";\n\nexport const CreateCard = ({ listId, boards, formShow, closeForm, socket }) => {\n  const params = useParams();\n  const dispatch = useDispatch();\n\n  const [nameCard, setNameCard] = useState(\"\");\n\n  const onNameCardChange = (e) => setNameCard(e.target.value);\n\n  const createCard = () => {\n    if (nameCard.replace(/ /g, \"\").length <= 0 || !listId) {\n      cardInput.current.focus();\n      return null;\n    }\n\n    const { boardId } = params;\n\n    // when the card was render(added on the state in redux)\n    //  then the popup moves down\n    \n    dispatch(addCard({ nameCard, boardId, listId })).then(() => {\n      dispatch(getLists(boardId)).then(() => {\n        dispatch(sortingLists(boards));\n        socket.emit(\"bond\", { roomId: boardId, message: \"card added\" });\n      });\n\n    });\n\n    setNameCard(\"\");\n  };\n\n  const cardInput = useRef(null);\n  const cardFormRef = useRef(null);\n  OutsideClick(cardFormRef, closeForm);\n\n  useEffect(() => {\n    cardInput?.current?.focus?.();\n  }, [cardInput]);\n  if (!formShow) return null;\n  return (\n    <div className=\"form-createCard\" ref={cardFormRef}>\n      <div>\n        <TextareaAutosize\n          placeholder=\"Названия для пункта\"\n          value={nameCard}\n          onChange={onNameCardChange}\n          maxRows={3}\n          onKeyDown={(e) => (e.key === \"Enter\" ? createCard() : null)}\n          ref={cardInput}\n        />\n      </div>\n      <button onClick={createCard}>Добавить пункт</button>\n      <button onClick={closeForm}>X</button>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/dots.c824fe58.svg\";","import React, { useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { useDispatch } from \"react-redux\";\nimport {\n  changeName,\n  deleteList,\n  archiveList,\n} from \"../../features/lists/listsSlice\";\n\nimport { Card } from \"./Card\";\n\nimport { CreateCard } from \"./CreateCard\";\n\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\n\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nimport OutsideClick from \"../../hooks/OutsideClick\";\n\nimport dots from \"../../img/dots.svg\";\n\nimport \"../../styles/Board/List.css\";\n\nexport const List = ({\n  boards,\n  listId,\n  listName,\n  listCards,\n  index,\n  cards,\n  visibleChangeCard,\n  visibleChangeNameCard,\n  height,\n  socket,\n}) => {\n  const params = useParams();\n\n  const { boardId } = params;\n\n  const dispatch = useDispatch();\n\n  const [nameList, setNameList] = useState(null);\n  const [actionShow, setActionShow] = useState(false);\n  const [cardCreateShow, setCardCreateShow] = useState(false);\n\n  const actionsFrom = useRef(null);\n  const nameInput = useRef(null);\n\n  const sendForm = (e) => {\n    if (e.key === \"Enter\" || e.keyCode === 13) {\n      dispatch(changeName({ listId, nameList })).then(() => {\n        socket.emit(\"bond\", {\n          roomId: boardId,\n          message: \"list changed\",\n          listId,\n        });\n      });\n      e.target.blur();\n    }\n  };\n\n  const deletingList = () => {\n    dispatch(deleteList({ listId })).then(() => {\n      socket.emit(\"bond\", { roomId: boardId, message: \"list deleted\", listId });\n    });\n  };\n\n  const archivingList = () => {\n    dispatch(archiveList({ listId })).then(() => {\n      socket.emit(\"bond\", { roomId: boardId, message: \"list changed\", listId });\n    });\n  };\n\n  OutsideClick(actionsFrom, () => setActionShow(false));\n  OutsideClick(nameInput, () => nameInput.current.blur());\n  return (\n    <Draggable key={listId} draggableId={listId} index={index} id={listId}>\n      {(provided) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className=\"listBlock\"\n        >\n          <div className=\"list-title\">\n            <TextareaAutosize\n              value={nameList === null ? listName : nameList}\n              onChange={(e) => setNameList(e.target.value)}\n              onKeyDown={sendForm}\n              spellCheck=\"false\"\n              ref={nameInput}\n            />\n            <img src={dots} onClick={() => setActionShow(!actionShow)} />\n            <div\n              className={actionShow === false ? \"hidden\" : \"active\"}\n              ref={actionsFrom}\n            >\n              <img src={dots} onClick={() => setActionShow(!actionShow)} />\n              <div onClick={archivingList}>В архив</div>\n              <div onClick={deletingList}>Удалить</div>\n            </div>\n          </div>\n          <Droppable droppableId={listId} type=\"card\">\n            {(provided) => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                style={{ maxHeight: height }}\n                className={\"list \" + listName}\n              >\n                <div>\n                  {listCards.map((cardId, index) => {\n                    return cards.map((card) => {\n                      if (card._id === cardId && !card.archived) {\n                        return (\n                          <Card\n                            key={card._id}\n                            card={card}\n                            index={index}\n                            visibleChangeCard={visibleChangeCard}\n                            visibleChangeNameCard={visibleChangeNameCard}\n                          />\n                        );\n                      }\n                    });\n                  })}\n                </div>\n\n                {provided.placeholder}\n                <div className=\"listCreate\">\n                  <button\n                    onClick={() => setCardCreateShow(true)}\n                    className={cardCreateShow === false ? null : \"hidden\"}\n                  >\n                    Добавить пункт\n                  </button>\n\n                  <CreateCard\n                    listId={listId}\n                    boards={boards}\n                    formShow={cardCreateShow}\n                    closeForm={() => setCardCreateShow(false)}\n                    socket={socket}\n                  />\n                </div>\n              </div>\n            )}\n          </Droppable>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { useDispatch } from \"react-redux\";\nimport { getBoard } from \"../../features/boards/boardsSlice\";\nimport { addList } from \"../../features/lists/listsSlice\";\n\nimport OutsideClick from \"../../hooks/OutsideClick\";\n\nimport \"../../styles/Board/CreateList.css\";\n\nexport const CreateList = ({ socket }) => {\n  const params = useParams();\n  const dispatch = useDispatch();\n\n  const [nameList, setNameList] = useState(\"\");\n  const [listFormShow, setListFormShow] = useState(false);\n\n  const onNameListChange = (e) => setNameList(e.target.value);\n  const visibleListCreate = () => setListFormShow(!listFormShow);\n\n  const createList = () => {\n    if (nameList.replace(/ /g, \"\").length <= 0) {\n      listInput.current.focus();\n      return null;\n    }\n\n    const { boardId } = params;\n\n    dispatch(addList({ nameList, boardId })).then(() => {\n      socket.emit(\"bond\", { roomId: boardId, message: \"list added\" });\n      dispatch(getBoard(boardId));\n    });\n\n    setNameList(\"\");\n  };\n\n  const listInput = useRef(null);\n  const listFormRef = useRef(null);\n  OutsideClick(listFormRef, () => setListFormShow(false));\n\n  useEffect(() => {\n    listInput?.current?.focus?.();\n  }, [listInput]);\n  return (\n    <li className=\"createList\">\n      <button onClick={visibleListCreate} className=\"createList-button\">\n        Добавить список\n      </button>\n      <div\n        className={listFormShow === false ? \"hidden\" : \"add-list\"}\n        ref={listFormRef}\n      >\n        <input\n          ref={(e) => e?.focus?.()}\n          type=\"text\"\n          placeholder=\"Название списка\"\n          value={nameList}\n          onChange={onNameListChange}\n          onKeyDown={(e) => (e.key === \"Enter\" ? createList() : null)}\n        />\n        <button onClick={createList}>Добавить список</button>\n        <button onClick={visibleListCreate}>X</button>\n      </div>\n    </li>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/recycling.a0beaed9.svg\";","export default __webpack_public_path__ + \"static/media/archive.298d3b52.svg\";","import React, { useRef, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  changeName,\n  changeDescription,\n  deleteCard,\n  archiveCard,\n} from \"../../features/card/cardsSlice\";\n\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nimport OutsideClick from \"../../hooks/OutsideClick\";\n\nimport recycling from \"../../img/recycling.svg\";\nimport archive from \"../../img/archive.svg\";\n\nimport \"../../styles/Board/ChangeCard.css\";\n\nexport const ChangeCard = ({\n  nameCard,\n  descriptionCard,\n  cardId,\n  changeCard,\n  isOpen,\n  closeForm,\n  socket,\n}) => {\n  const params = useParams();\n  const dispatch = useDispatch();\n\n  const [description, setDescription] = useState(\"\");\n  const [visible, setVisible] = useState(\"none\");\n\n  const sendForm = (e) => {\n    if (e.key === \"Enter\" || e.keyCode === 13 || e.type === \"click\") {\n      const { boardId } = params;\n\n      switch (e.target.id) {\n        case \"name\":\n          dispatch(changeName({ cardId, nameCard })).then(() => {\n            socket.emit(\"bond\", {\n              roomId: boardId,\n              message: \"card changed\",\n              cardId,\n            });\n          });\n\n          nameInput.current.blur();\n          break;\n        case \"description\":\n          dispatch(changeDescription({ cardId, description })).then(() => {\n            socket.emit(\"bond\", {\n              roomId: boardId,\n              message: \"card changed\",\n              cardId,\n            });\n          });\n\n          break;\n        case \"delete\":\n          dispatch(deleteCard({ cardId })).then(() => {\n            socket.emit(\"bond\", {\n              roomId: boardId,\n              message: \"card deleted\",\n              cardId,\n            });\n          });\n\n          closeForm();\n          break;\n        case \"archive\":\n          dispatch(archiveCard({ cardId })).then(() => {\n            socket.emit(\"bond\", {\n              roomId: boardId,\n              message: \"card changed\",\n              cardId,\n            });\n          });\n\n          closeForm();\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  useEffect(() => {\n    setDescription(descriptionCard);\n  }, [descriptionCard]);\n\n  const nameInput = useRef(false);\n  const form = useRef(null);\n  const descript = useRef(null);\n\n  OutsideClick(form, () => closeForm());\n  OutsideClick(descript, () => setVisible(\"none\"));\n\n  if (!isOpen) return null;\n  return (\n    <div>\n      <div className=\"blackBG\" style={{ left: 0, display: \"flex\" }}>\n        <div className=\"changeCard\" ref={form}>\n          <div className=\"changeCard-title\">Название</div>\n          <TextareaAutosize\n            id=\"name\"\n            value={nameCard}\n            onChange={changeCard}\n            onKeyDown={sendForm}\n            maxRows={3}\n            onBlur={(e) => {\n              sendForm(e);\n            }}\n            spellCheck=\"false\"\n            ref={nameInput}\n          />\n          <div className=\"description\" ref={descript}>\n            Описание\n            <TextareaAutosize\n              placeholder=\"Add a more detail description...\"\n              value={description}\n              maxRows={10}\n              onChange={(e) => setDescription(e.target.value)}\n              spellCheck=\"false\"\n              onFocus={() => setVisible(\"block\")}\n            />\n            <button\n              id=\"description\"\n              onClick={(e) => {\n                setVisible(\"none\");\n                sendForm(e);\n              }}\n              style={{ display: visible }}\n            >\n              Сохранить\n            </button>\n            <button\n              id=\"description\"\n              onClick={() => setVisible(\"none\")}\n              style={{ display: visible }}\n            >\n              X\n            </button>\n          </div>\n          <button onClick={closeForm}>X</button>\n          <img id=\"delete\" src={recycling} onClick={sendForm} />\n          <img id=\"archive\" src={archive} onClick={sendForm} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useRef } from \"react\";\nimport { useParams} from \"react-router-dom\";\n\nimport { useDispatch } from \"react-redux\";\n\nimport { changeName } from \"../../features/card/cardsSlice\";\n\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nimport OutsideClick from \"../../hooks/OutsideClick\";\n\nimport \"../../styles/Board/ChangeNameCard.css\";\n\nexport const ChangeNameCard = ({\n  nameCard,\n  changeNameCard,\n  cardId,\n  closeForm,\n  xPos,\n  yPos,\n  height,\n  socket,\n}) => {\n  const params = useParams();\n  const dispatch = useDispatch();\n\n  const sendForm = () => {\n    const { boardId } = params;\n\n    dispatch(changeName({ cardId, nameCard })).then(() => {\n      socket.emit(\"bond\", { roomId: boardId, message: \"card changed\", cardId });\n    });\n    closeForm();\n  };\n\n  const form = useRef(null);\n\n  OutsideClick(form, () => closeForm());\n\n  yPos > height ? (yPos = height) : (yPos -= 7);\n\n  return (\n    <div\n      className=\"blackBG\"\n      style={{\n        left: 0,\n        backgroundColor: \"#0009\",\n      }}\n    >\n      <div\n        className=\"changeNameCard\"\n        ref={form}\n        style={{ transform: `translate(${xPos - 228}px, ${yPos}px)` }}\n      >\n        <TextareaAutosize\n          id=\"name\"\n          value={nameCard}\n          onChange={changeNameCard}\n        />\n        <button onClick={sendForm}>Сохранить</button>\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/restore.1f1d5f30.svg\";","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { useDispatch } from \"react-redux\";\n\nimport { unarchiveList, deleteList } from \"../../features/lists/listsSlice\";\n\nimport recycling from \"../../img/recycling.svg\";\nimport restore from \"../../img/restore.svg\";\n\nimport \"../../styles/Board/ArchiveList.css\";\n\nexport const ArchiveList = ({ height, back, close, lists, socket }) => {\n  const params = useParams();\n\n  const { boardId } = params;\n\n  const dispatch = useDispatch();\n\n  const unarchive = (listId) =>\n    dispatch(unarchiveList({ listId })).then(() => {\n      socket.emit(\"bond\", { roomId: boardId, message: \"list changed\", listId });\n    });\n  const deleting = (listId) =>\n    dispatch(deleteList({ listId })).then(() => {\n      socket.emit(\"bond\", { roomId: boardId, message: \"list deleted\", listId });\n    });\n\n  return (\n    <div className=\"archive\" style={{ height: height - 90 }}>\n      <div className=\"archiveTitle\">\n        <button onClick={back}>&#60;</button>\n        Списки в архиве\n        <button onClick={close}>X</button>\n      </div>\n      <hr />\n\n      <ul className=\"archivedLists\">\n        {lists.map((list) => {\n          if (list.archived) {\n            return (\n              <li key={list._id}>\n                {list.nameList}\n                <img src={restore} onClick={() => unarchive(list._id)} />\n                <img src={recycling} onClick={() => deleting(list._id)} />\n              </li>\n            );\n          }\n        })}\n      </ul>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { useDispatch } from \"react-redux\";\n\nimport { unarchiveCard, deleteCard } from \"../../features/card/cardsSlice\";\n\nimport recycling from \"../../img/recycling.svg\";\nimport restore from \"../../img/restore.svg\";\n\nimport \"../../styles/Board/ArchiveCard.css\";\n\nexport const ArchiveCard = ({ height, back, close, cards, socket }) => {\n  const params = useParams();\n\n  const { boardId } = params;\n\n  const dispatch = useDispatch();\n\n  const unarchive = (cardId) =>\n    dispatch(unarchiveCard({ cardId })).then(() => {\n      socket.emit(\"bond\", {\n        roomId: boardId,\n        message: \"card changed\",\n        cardId,\n      });\n    });\n  const deleting = (cardId) =>\n    dispatch(deleteCard({ cardId })).then(() => {\n      socket.emit(\"bond\", {\n        roomId: boardId,\n        message: \"card deleted\",\n        cardId,\n      });\n    });\n\n  return (\n    <div className=\"archive\" style={{ height: height - 90 }}>\n      <div className=\"archiveTitle\">\n        <button onClick={back}>&#60;</button>\n        Пункты в архиве\n        <button onClick={close}>X</button>\n      </div>\n      <hr />\n      <ul className=\"archivedLists\">\n        {cards.map((card) => {\n          if (card.archived) {\n            return (\n              <li key={card._id}>\n                {card.nameCard}\n                <img src={restore} onClick={() => unarchive(card._id)} />\n                <img src={recycling} onClick={() => deleting(card._id)} />\n              </li>\n            );\n          }\n        })}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport uniqid from \"uniqid\";\n\nimport \"../../styles/Board/ShareBoard.css\";\n\nexport const ShareBoard = ({ height, back, close, socket, shareLink }) => {\n  const params = useParams();\n\n  const [link, setLink] = useState(\"\");\n\n  useEffect(() => {\n    setLink(shareLink);\n  }, []);\n\n  const generateLink = () => {\n    const boardId = params.boardId;\n    const boardName = params.name;\n\n    const newLink = `https://mytrello-backend.onrender.com/invite/b/${boardId}/${uniqid()}/${boardName}`;\n    // const newLink = `http://localhost:3000/invite/b/${boardId}/${uniqid()}/${boardName}`;\n    setLink(newLink);\n    \n    socket.emit(\"addLink\", newLink, boardId);\n    socket.emit(\"bond\", {\n      roomId: boardId,\n      message: \"disconnect\",\n    });\n  };\n\n  const deleteLink = () =>{\n    const boardId = params.boardId;\n\n    setLink(\"\");\n\n    socket.emit(\"addLink\", \"\", boardId);\n    socket.emit(\"bond\", {\n      roomId: boardId,\n      message: \"disconnect\",\n    });\n  }\n\n  useEffect(() => {\n    socket.on(\"addLink\", (data) => {\n      if (data === \"Added\") {\n        const roomId = params.boardId;\n\n        socket.emit(\"room\", roomId);\n      }\n    });\n  }, [socket]);\n\n  return (\n    <div className=\"share\" style={{ height: height - 90 }}>\n      <div className=\"shareTitle\">\n        <button onClick={back}>&#60;</button>\n        Поделиться таблицей\n        <button onClick={close}>X</button>\n      </div>\n      <hr />\n      <ul className=\"sharedMenu\">\n        <li>\n          <input readOnly=\"readonly\" value={link} />\n        </li>\n        <li>\n          <button onClick={generateLink}>Создать ссылку</button>\n        </li>\n        <li>\n          <button onClick={deleteLink}>Удалить ссылку</button>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/makeLink.618bc37c.svg\";","import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getBoard,\n  getBoards,\n  changeLists,\n  changeData,\n  removeBoards,\n} from \"../../features/boards/boardsSlice\";\nimport {\n  getLists,\n  getList,\n  sortingLists,\n  changeCards,\n  removeList,\n} from \"../../features/lists/listsSlice\";\nimport { getCards, getCard, removeCard } from \"../../features/card/cardsSlice\";\n\nimport useWindowHeight from \"../../hooks/heightWindowHook\";\n\nimport { Loader } from \"../blanks/Loader\";\nimport { Header } from \"../blanks/Header\";\nimport { CreateBoards } from \"../CreateBoards\";\nimport { BoardName } from \"./BoardName\";\nimport { List } from \"./List\";\nimport { CreateList } from \"./CreateList\";\nimport { ChangeCard } from \"./ChangeCard\";\nimport { ChangeNameCard } from \"./ChangeNameCard\";\nimport { Menu } from \"./Menu\";\n\nimport \"../../styles/Board/Board.css\";\nimport { store } from \"../../app/store\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\n\nexport const Board = ({ socket }) => {\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const { height } = useWindowHeight();\n\n  const dispatch = useDispatch();\n  const { boards } = useSelector((state) => state.boards);\n  const { lists } = useSelector((state) => state.lists);\n  const { cards, status } = useSelector((state) => state.cards);\n\n  let setSavedBoards = boards;\n\n  const [createShow, setCreateShow] = useState(false);\n\n  const [changeCard, setChangeCard] = useState(false);\n  const [changeNameCard, setChangeNameCard] = useState(false);\n\n  const [nameCard, setNameCard] = useState(\"\");\n  const [descriptionCard, setDescriptionCard] = useState(\"\");\n\n  const [cardId, setCardId] = useState(null);\n\n  const [xPos, setXPos] = useState(null);\n  const [yPos, setYPos] = useState(null);\n\n  const [connect, setConnect] = useState(false);\n\n  const visibleChangeCard = (e, id, description, name) => {\n    if (e.target.innerText === \"\") return null;\n    setCardId(id);\n\n    setNameCard(name);\n    setDescriptionCard(description);\n\n    setChangeCard(true);\n  };\n\n  const visibleChangeNameCard = (e, nameCard, id) => {\n    setNameCard(nameCard);\n\n    setCardId(id);\n\n    setXPos(e.target.getBoundingClientRect().x);\n    setYPos(e.target.getBoundingClientRect().y);\n\n    setChangeNameCard(true);\n  };\n\n  useEffect(() => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n\n    if (!accessToken) navigate(\"/sig\");\n\n    try {\n      socket.emit(\"tokenVerify\", JSON.parse(accessToken));\n    } catch (error) {\n      socket.emit(\"tokenVerify\", accessToken);\n    }\n\n    socket.on(\"tokenVerify\", (data) => {\n      if (data !== \"Error\") {\n        const { newToken, idUser, userName } = data;\n\n        const { boardId } = params;\n\n        if (newToken) localStorage.setItem(\"accessToken\", newToken);\n\n        localStorage.setItem(\"userId\", idUser);\n        localStorage.setItem(\"userName\", userName);\n\n        socket.emit(\"checkUser\", { idUser, boardId });\n\n        socket.off(\"tokenVerify\");\n      } else {\n        navigate(\"/error/404\");\n      }\n    });\n\n    socket.on(\"checkUser\", (data) => {\n      if (data !== \"Error\") {\n        const userId = localStorage.getItem(\"userId\");\n\n        const { boardId } = params;\n\n        const date = Date.now();\n        dispatch(changeData({ boardId, date }));\n\n        if (store.getState().boards.boards.length === 0) {\n\n\n          dispatch(getBoards(userId));\n        }\n\n        const lists = store.getState().lists.lists;\n\n        const amountLists = store.getState().boards.boards.find((board) => {\n          if (board._id === boardId) {\n            return board;\n          }\n        })?.lists.length;\n\n        if (amountLists !== lists.length) {\n          dispatch(getLists(boardId)).unwrap().then(unwrapResult).then((res) => {\n\n\n            dispatch(getBoards(userId)).unwrap().then(unwrapResult).then((res) => {\n\n\n\n            });\n\n          });\n          dispatch(getCards(boardId));\n        }\n\n        socket.off(\"checkUser\");\n      } else {\n        const userId = localStorage.getItem(\"userId\");\n        const userName = localStorage.getItem(\"userName\");\n        console.log('userId3');\n\n        dispatch(getBoards(userId));\n\n        navigate(`/${userName}/boards`);\n      }\n    });\n  }, [params]);\n\n  useEffect(() => {\n\n    socket.on(\"bond\", (data) => {\n      const { boardId } = params;\n\n      const { message, position } = data;\n      const { listId, currentListId } = data;\n      const { cardId, fromListId, toListId } = data;\n\n      const userId = localStorage.getItem(\"userId\");\n\n\n      switch (message) {\n        case \"Update board\":\n          dispatch(getBoard(boardId));\n\n          break;\n        case \"Update lists\":\n\n          const idUser = localStorage.getItem(\"userId\");\n          dispatch(getBoards(idUser)).unwrap()\n            .then((originalPromiseResult) => {\n              const res = originalPromiseResult;\n              console.log(originalPromiseResult);\n              dispatch(getLists(boardId)).unwrap()\n                .then((originalPromiseResult) => {\n                  dispatch(sortingLists(res));\n                  console.log(originalPromiseResult);\n                })\n                .catch((rejectedValueOrSerializedError) => {\n                  console.log(rejectedValueOrSerializedError);\n\n                })\n            })\n            .catch((rejectedValueOrSerializedError) => {\n              console.log(rejectedValueOrSerializedError);\n\n            })\n\n\n\n          break;\n        case \"Update list\":\n          dispatch(getList(listId));\n\n          break;\n        case \"Delete list\":\n          dispatch(removeList(listId));\n          break;\n\n        case \"Move list\":\n          dispatch(changeLists({ position, boardId, currentListId }));\n          break;\n\n        case \"Update cards\":\n          \n          const idUse = localStorage.getItem(\"userId\");\n          dispatch(getBoards(idUse)).unwrap()\n            .then((originalPromiseResult) => {\n              const res = originalPromiseResult;\n              console.log(originalPromiseResult);\n              dispatch(getLists(boardId)).unwrap()\n                .then((originalPromiseResult) => {\n                  dispatch(sortingLists(res));\n                  console.log(originalPromiseResult);\n                })\n                .catch((rejectedValueOrSerializedError) => {\n                  console.log(rejectedValueOrSerializedError);\n\n                })\n            })\n            .catch((rejectedValueOrSerializedError) => {\n              console.log(rejectedValueOrSerializedError);\n\n            })\n          // dispatch(getLists(boardId)).unwrap().then(unwrapResult).then((res) => {\n          //   dispatch(sortingLists(boards));\n          // });\n\n          dispatch(getCards(boardId));\n\n          break;\n\n        case \"Update card\":\n          dispatch(getCard(cardId));\n\n          break;\n\n        case \"Delete card\":\n          dispatch(removeCard({ cardId }));\n\n          break;\n\n        case \"Move card\":\n          dispatch(getList(fromListId));\n          dispatch(getList(toListId));\n\n          break;\n        case \"disconnect\":\n          const userId = localStorage.getItem(\"userId\");\n          const userName = localStorage.getItem(\"userName\");\n\n          dispatch(removeBoards());\n\n          navigate(`/${userName}/boards`);\n\n          break;\n        default:\n          break;\n      }\n    });\n  }, [socket]);\n\n  const onDrop = (e) => {\n    if (e.type === \"list\") {\n      const position = e.destination.index;\n      const { boardId } = params;\n      const currentListId = e.draggableId;\n\n      dispatch(changeLists({ position, boardId, currentListId })).unwrap().then(unwrapResult).then((originalPromiseResult) => {\n        socket.emit(\"bond\", {\n          roomId: boardId,\n          message: \"list moved\",\n          position,\n          currentListId,\n        });\n      });\n\n      // dispatch(changeLists({ position, boardId, currentListId }));\n\n      // socket.emit(\"bond\", {\n      //   roomId: boardId,\n      //   message: \"list moved\",\n      //   position,\n      //   currentListId,\n      // });\n    } else if (e.type === \"card\") {\n      try {\n        const { boardId } = params;\n\n        const fromListId = e.source.droppableId;\n        const toListId = e.destination.droppableId;\n        const position = e.destination.index;\n        const cardId = e.draggableId;\n\n        dispatch(changeCards({ fromListId, toListId, position, cardId })).unwrap().then(unwrapResult).then((originalPromiseResult) => {\n          socket.emit(\"bond\", {\n            roomId: boardId,\n            message: \"card moved\",\n            cardId,\n            fromListId,\n            toListId,\n            position,\n          });\n        });\n\n        // dispatch(changeCards({ fromListId, toListId, position, cardId }));\n\n        // socket.emit(\"bond\", {\n        //   roomId: boardId,\n        //   message: \"card moved\",\n        //   cardId,\n        //   fromListId,\n        //   toListId,\n        //   position,\n        // });\n      } catch (error) { }\n    }\n  };\n\n  useEffect(() => {\n\n    if (boards.length > 0 && lists.length > 0) {\n\n      boards.map((board) => {\n        if (board._id === params.boardId && board.shareLink && !connect) {\n          const roomId = params.boardId;\n          socket.emit(\"room\", roomId);\n\n          setConnect(true);\n        }\n      });\n\n      dispatch(sortingLists(boards));\n      setSavedBoards = boards;\n      // help();\n\n    }\n  }, [boards]);\n\n  // useEffect(() => {\n  //   if (boards.length > 0 && lists.length > 0) {\n  //     dispatch(sortingLists(boards));\n  //   }\n  // }, [lists.length])\n\n  const [drag, setDrag] = useState(false);\n\n  return (\n    <div className=\"boardMenu\" style={{ height: height }}>\n      <Header boards={boards} createShow={() => setCreateShow(true)} />\n      <div className=\"lists\" style={{ height: height - 127 }}>\n        <div className=\"container\">\n          <div className=\"lists__inner\" style={{ height: height - 200 }}>\n            {boards.length > 0\n              ? boards.map((board) => {\n                if (board._id === params.boardId) {\n                  return (\n                    <div key={board._id} className=\"action-board\">\n                      <BoardName name={board.nameBoard} socket={socket} />\n                      <Menu\n                        height={height - 108}\n                        boards={boards}\n                        lists={lists}\n                        cards={cards}\n                        socket={socket}\n                        shareLink={board.shareLink}\n                      />\n                    </div>\n                  );\n                }\n              })\n              : null}\n\n            <ul\n              className=\"scrollBoard\"\n              style={drag === false ? { transform: `translateZ(10px)` } : null}\n            >\n              <li>\n                <DragDropContext\n                  onDragStart={() => setDrag(true)}\n                  onDragEnd={(e) => {\n                    onDrop(e);\n                    setDrag(false);\n                  }}\n                >\n                  <Droppable\n                    droppableId=\"lists\"\n                    direction=\"horizontal\"\n                    type=\"list\"\n                  >\n                    {(provided) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        className=\"sheetList\"\n                      >\n                        {lists.map((list, index) =>\n                          !list.archived ? (\n                            <List\n                              key={list._id + index}\n                              boards={boards}\n                              listId={list._id}\n                              listName={list.nameList}\n                              listCards={list.cards}\n                              index={index}\n                              cards={cards}\n                              visibleChangeCard={visibleChangeCard}\n                              visibleChangeNameCard={visibleChangeNameCard}\n                              height={height - 310}\n                              socket={socket}\n                            />\n                          ) : null\n                        )}\n                        {provided.placeholder}\n                      </div>\n                    )}\n                  </Droppable>\n                </DragDropContext>\n              </li>\n              <CreateList socket={socket} />\n            </ul>\n            <ChangeCard\n              nameCard={nameCard}\n              descriptionCard={descriptionCard}\n              changeDescription={(e) => setDescriptionCard(e.target.value)}\n              cardId={cardId}\n              changeCard={(e) => setNameCard(e.target.value)}\n              isOpen={changeCard}\n              closeForm={() => setChangeCard(false)}\n              socket={socket}\n            />\n\n            {changeNameCard === false ? null : (\n              <ChangeNameCard\n                nameCard={nameCard}\n                changeNameCard={(e) => setNameCard(e.target.value)}\n                cardId={cardId}\n                closeForm={() => setChangeNameCard(false)}\n                xPos={xPos}\n                yPos={yPos}\n                height={height - 270}\n                socket={socket}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n      <CreateBoards\n        createShow={createShow}\n        changeShow={() => setCreateShow(false)}\n        height={height}\n        boards={boards}\n      />\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\n\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nimport { Loader } from \"./blanks/Loader\";\n\nexport const ValidateInvite = ({ socket }) => {\n  const navigate = useNavigate();\n  const params = useParams();\n\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userId\");\n\n    if (!userId) navigate(\"/\");\n\n    const link = window.location.href;\n\n    socket.emit(\"validateInvite\", { link, userId });\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"validateInvite\", (data) => {\n      console.log(data);\n\n      socket.off(\"validateInvite\");\n\n      if (data === \"Already added\") {\n        navigate(\"/board/\" + params.boardId + \"/\" + params.name);\n      } else if (data === \"Added\") {\n        const roomId = params.boardId;\n        socket.emit(\"room\", roomId);\n\n        navigate(\"/board/\" + params.boardId + \"/\" + params.name);\n      }\n    });\n  }, [socket]);\n\n  return <Loader />;\n};\n","import React, { useState, useRef, useEffect, useLayoutEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getBoards } from \"../../features/boards/boardsSlice\";\n\nimport { Header } from \"../blanks/Header\";\nimport { CreateBoards } from \"../CreateBoards\";\n\nimport useWindowHeight from \"../../hooks/heightWindowHook\";\n\nimport {axiosInstance} from \"../../config\";\n\nimport \"../../styles/profile/Profile.css\";\n\nexport const Profile = () => {\n  const dispatch = useDispatch();\n\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const { height } = useWindowHeight();\n\n  const { boards } = useSelector((state) => state.boards);\n\n  const [createShow, setCreateShow] = useState(false);\n  const [heightBody, setHeightBody] = useState(null);\n  const [name, setName] = useState(params.userName);\n\n  const [firstUpdate, setFirstUpdate] = useState(0);\n\n  const heightRef = useRef(null);\n\n  useEffect(() => {\n    const idUser = localStorage.getItem(\"userId\");\n\n    dispatch(getBoards(idUser));\n  }, []);\n\n  useEffect(() => {\n    setHeightBody(heightRef?.current?.clientHeight);\n  });\n\n  const changeName = () => {\n    axiosInstance({\n      config: {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      },\n      method: \"POST\",\n      url: \"/user/change/name\",\n      data: {\n        userName: name,\n        oldName: params.userName,\n      },\n    }).then((response) => {\n      if (response.status === 200) {\n        localStorage.setItem(\"userName\", response.data.userName);\n\n        navigate(\"../\" + response.data.userName + \"/profile\");\n      }\n    });\n  };\n\n  // useLayoutEffect(() => {\n  //   if (firstUpdate < 2) {\n  //     setFirstUpdate(firstUpdate + 1);\n  //     return;\n  //   }\n  //   const boardId = boards[boards.length - 1]._id;\n  //   const boardName = boards[boards.length - 1].nameBoard;\n  //   navigate(\"/board/\" + boardId + \"/\" + boardName);\n  // }, [boards]);\n\n\n\n  return (\n    <div className=\"profile\" style={{ minHeight: height }} ref={heightRef}>\n      <Header boards={boards} createShow={() => setCreateShow(true)} />\n      <div className=\"container\">\n        <div className=\"profile__inner\">\n          <div>Здравствуй {params.userName}</div>\n          <div>\n            Логин\n            <input value={name} onChange={(e) => setName(e.target.value)} />\n            <button onClick={changeName}>Сохранить</button>\n          </div>\n        </div>\n      </div>\n\n      <CreateBoards\n        createShow={createShow}\n        changeShow={() => setCreateShow(false)}\n        height={heightBody}\n        boards={boards}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const NotFound = () => {\n  return (\n    <div className=\"notFound\">\n      <div className=\"container\">\n        <div className=\"notFound__inner\">\n          <h1> 404 </h1>\n          <div>Страница не найдена</div>\n          <div className=\"notFound-exit\">\n            <Link to=\"/sig\"> Назад </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\n\nimport { SignInFrom } from \"./components/form/SignInFrom\";\nimport { RegistrationForm } from \"./components/form/RegistrationForm\";\nimport { ForgotForm } from \"./components/form/ForgotForm\";\nimport { ResetForm } from \"./components/form/ResetForm\";\n\nimport { Boards } from \"./components/Boards\";\nimport { Board } from \"./components/board/Board\";\n\nimport { ValidateInvite } from \"./components/ValidateInvite\";\n\nimport { Profile } from \"./components/profile/Profile\";\n\nimport { NotFound } from \"./components/NotFound\";\n\nimport \"./styles/reset.css\";\nimport \"./styles/blanks.css\";\nimport \"./styles/formStyles.css\";\nimport \"./styles/Boards.css\";\n\nimport useWindowHeight from \"./hooks/heightWindowHook\";\nfunction App({ socket }) {\n  const { height } = useWindowHeight();\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Routes>\n          <Route\n            path=\"/sig\"\n            element={<SignInFrom socket={socket} height={height} />}\n          />\n          <Route\n            path=\"/reg\"\n            element={<RegistrationForm socket={socket} height={height} />}\n          />\n          <Route\n            path=\"/forg\"\n            element={<ForgotForm socket={socket} height={height} />}\n          />\n          <Route\n            path=\"/:token/reset/\"\n            element={<ResetForm socket={socket} height={height} />}\n          />\n\n          <Route\n            path=\"/:userName/boards\"\n            element={<Boards socket={socket} height={height}/>}\n          />\n          <Route\n            path=\"/board/:boardId/:name\"\n            element={<Board socket={socket} />}\n          />\n          <Route\n            path=\"invite/b/:boardId/:uniqId/:name\"\n            element={<ValidateInvite socket={socket} />}\n          />\n\n          <Route\n            path=\"/:userName/profile\"\n            element={<Profile socket={socket} />}\n          />\n\n          <Route path=\"/error/:code\" element={<NotFound />} />\n\n          <Route path=\"/\" element={<Navigate replace to=\"/sig\" />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\nimport { io } from \"socket.io-client\";\n\nconst socket = io(`https://mytrello-backend.onrender.com`);\n// const socket = io(`http://localhost:3000/`);\n// const socket = io(`http://localhost:5000/`);\nsocket.on(\"connect\", () => {});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App socket={socket} />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}